#简介

IPC是(internel process communication) 内核之间的进程通讯，不通进程之间的消息传递，因为像共享内存这样的比较新的通信方式需要某种形式的共同参与和运作

在unix高阶编程30年的演变过程中，消息传递经过了下面的几个阶段

1）管道，这是第一个广泛使用的ipc形式，既可以在程序中使用，也可以在shell中使用。管道的问题在于他们只能具有共同的祖先（父子进程）的进程间使用，不过这个问题已经随着有名管道即FIFO的引入而得到了解决

system v 消息队列，是20世纪80年代加入到内核当中的。他们可以用在同意主机上有学院关系或者没有血缘关系的进程之间.绝大多数的操作系统都是支持他们的

posox消息队列是由posix实时标准加入的，他们可以在同一台主机上有血缘关系的程序和没有血缘关系之间的程序运行

远程过程调用（RPC） 出现在20世纪中期，他是从一个系统上某个程序调用另一个系统上的某个函数的一种方法.既然客户和服务之间通常传递一些信息，而且RPC 可用在同意主机上的客户和服务器之间，因此RPC是另一种消息的传递

需要某种同步形式，防止多个进程同时写一个文件

记录上锁 

system v 信号量

posix 信号量 和 posix共享内存 

互斥锁  和 条件变量（多线程标准）

读写锁

总结 经历阶段：

管道——》system v 消息队列 --》posix标准（消息队列）--》rpc远程过程机器调用